name: CI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-dev \
          python3-pip \
          redis-server \
          mariadb-server \
          mariadb-client \
          libmariadb-dev \
          wkhtmltopdf
    
    - name: Install Frappe Bench
      run: |
        pip install frappe-bench
        bench init frappe-bench --skip-redis-config-generation --skip-assets --python python3
        cd frappe-bench
    
    - name: Install ERPNext
      working-directory: ./frappe-bench
      run: |
        bench get-app erpnext --branch version-15
        bench new-site test_site --admin-password admin --mariadb-root-password root
        bench --site test_site install-app erpnext
    
    - name: Install Qonto Connector
      working-directory: ./frappe-bench
      run: |
        cp -r ../qonto_connector apps/
        bench --site test_site install-app qonto_connector
    
    - name: Run tests
      working-directory: ./frappe-bench
      run: |
        bench --site test_site run-tests --app qonto_connector --coverage
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./frappe-bench/sites/coverage.xml
        flags: unittests
        name: codecov-umbrella

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        pip install black isort flake8
    
    - name: Check code formatting with Black
      run: |
        black --check qonto_connector --line-length 100
    
    - name: Check import sorting with isort
      run: |
        isort --check-only qonto_connector --profile black
    
    - name: Lint with flake8
      run: |
        flake8 qonto_connector --max-line-length=100 --extend-ignore=E203,W503

